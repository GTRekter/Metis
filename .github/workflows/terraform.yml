name: 'Terraform'
on:
  push:
    branches:
      - main
    paths: 
       - 'terraform/**'
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths: 
       - 'terraform/**'
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }} 
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }} 
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }} 
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
    - name: Terraform Init
      id: init
      run: terraform init \
        -backend-config="resource_group_name=${{ secrets.AZURE_STORAGE_ACCOUNT_RESOURCE_GROUP_NAME }}" \z
        -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" \
        -backend-config="container_name=${{ secrets.AZURE_STORAGE_ACCOUNT_CONTAINER_NAME }}" \
        -backend-config="key=${{ secrets.AZURE_STORAGE_ACCOUNT_CONTAINER_KEY }}" \
        -backend-config="sas_token=${{ secrets.AZURE_STORAGE_ACCOUNT_CONTAINER_TOKEN }}"
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color -input=false
      continue-on-error: true
    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false